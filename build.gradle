buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven { url 'https://repo.grails.org/grails/core' }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.4.0'
        classpath 'ru.d10xa:gradle-allure-plugin:0.5.2'
        classpath 'org.grails.plugins:views-gradle:1.1.0'
    }
}

version = "${productVersion}${(isRelease.toBoolean()) ? '' : '-SNAPSHOT'}"
group 'com.exa.exacloud'

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.grails.grails-plugin'
apply plugin: 'org.grails.grails-plugin-publish'
apply plugin: 'org.grails.plugins.views-json'
apply plugin: 'com.jfrog.artifactory'

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://repo.grails.org/grails/core' }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-logging'
    compile 'org.springframework.boot:spring-boot-autoconfigure'
    compile 'org.grails:grails-core'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-tomcat'
    compile 'org.grails:grails-dependencies'
    compile 'org.grails:grails-web-boot'
    compile 'org.grails.plugins:views-json:1.1.1'
    console 'org.grails:grails-console'
    profile 'org.grails.profiles:web-plugin'

    testCompile 'org.grails:grails-plugin-testing'
}

if (!ext.has('ignoreTestFailures')) {
    ext.ignoreTestFailures = false
}

test {
    ignoreFailures = project.ext.ignoreTestFailures.toBoolean()
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5.1'
    distributionType = Wrapper.DistributionType.ALL
}


bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
}
// enable if you wish to package this plugin as a standalone application
bootRepackage.enabled = false

grailsPublish {
    user = 'none'
    key = 'none'
    githubSlug = 'none'
    title = 'none'
    desc = 'none'
    developers = [none: 'none']
    portalUser = ''
    portalPassword = ''
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom.withXml {
                def pomNode = asNode()
                pomNode.dependencyManagement.replaceNode {}
                // simply remove dependencies without a version
                // version-less dependencies are handled with dependencyManagement
                // see https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/8 for more complete solutions
                pomNode.dependencies.dependency.findAll {
                    it.version.text().isEmpty()
                }.each {
                    it.replaceNode {}
                }
            }
            from components.java
            def descriptor =
                    artifacts = ["build/libs/halm-${version}.jar", sourcesJar]
        }
    }
}

artifactory {
    contextUrl = "${artifactoryUrl}"

    publish {
        defaults {
            publications('mavenJava')
            publishArtifacts = true
            publishPom = true

        }
        repository {
            repoKey = "${isRelease.toBoolean() ? 'plugins-release-local' : 'plugins-snapshot-local'}"
            username = usernameText
            password = passwordText
        }
    }
}